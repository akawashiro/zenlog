#!/bin/bash

cat <<'EOF'

#==============================================================================
# Basic Zenlog bash helper functions.
#
# Add the following line to your $HOME/.bashrc file.
#
# . <(zenlog sh-helper)
#==============================================================================

function _zenlog_just_run() {
  "${@}"
}

# Run a command without logging the output.
alias 184=_zenlog_just_run

# Run a command with forcing log, regardless of ZENLOG_ALWAYS_NO_LOG_COMMANDS.
alias 186=_zenlog_just_run

# Zehlog helper command: print the current command's command line for bash.
function zenlog_bash_last_command() {
    # Use echo to remove newlines.
    HISTTIMEFORMAT= history 1 | sed -e 's/^ *[0-9][0-9]* *//'
}

# Zenlog helper command: print the "environment".
function zenlog_bash_dump_env() {
    {
        echo "PWD: $(pwd)"
        echo "git HEAD: $(git rev-parse HEAD) $(git rev-parse --abbrev-ref HEAD)"
        env # dump environmental variables.
        # declare -p # this dumps shell variables too, but also functions, and may be too big.
    } 2>/dev/null
}

function zenlog_bash_preexec() {
    zenlog start-command -e "$(zenlog_bash_dump_env)" "$(zenlog_bash_last_command)"
}

function zenlog_bash_postexec() {
    local implicit_status=$?
    local opt=""
    if [[ "$1" == "-n" ]] ; then
        opt="-n"
    fi
    local status="${1:-$implicit_status}"

    zenlog end-command $opt "$status"
}

# If called from the login shell, then close the current zenlog session and restart zenlog.
function zenlog_restart() {
    if zenlog in-zenlog; then
        exit 13
    else
        echo "Not in zenlog." 1>&2
    fi
}

# For backward compatibility.
function zenlog_in_zenlog() {
  zenlog in-zenlog
}

# For backward compatibility.
function in_zenlog() {
  zenlog in-zenlog
}

# For backward compatibility.
function zenlog_current_log() {
  zenlog current-log "$@"
}

# For backward compatibility.
function zenlog_last_log() {
  zenlog last-log "$@"
}

EOF
