#!/bin/bash

medir=$(readlink -m "$medir")

$medir/../scripts/build.sh

# Clear all ZENLOG_ variables.
for env in ${!ZENLOG_*} ; do
  unset "$env"
done

# Make sure to close the shell when the input finishes.
unset IGNOREEOF

# Configuration.
export ZENLOG_BIN="$medir/../bin/zenlog"

export ZENLOG_CONF="$medir/files/$TEST_NAME/zenlog.toml"
export ZENLOG_START_COMMAND="exec /bin/bash --noprofile --rcfile $medir/files/bashrc"
export ZENLOG_DIR=/tmp/zenlog-test/$TEST_NAME

export _ZENLOG_LOGGER_PID=123
export _ZENLOG_TIME_INJECTION_FILE=/tmp/zenlog-time
export _ZENLOG_E2E_START_TIME=1508544000
export _ZENLOG_E2E_EXIT_TIME=1594944000
echo $_ZENLOG_E2E_START_TIME >"$_ZENLOG_TIME_INJECTION_FILE"

#export ZENLOG_DEBUG=1

export TREE="tree -aF"

clear_log() {
  # Prepare log dir.
  rm -fr "$ZENLOG_DIR"/*
  mkdir -p "$ZENLOG_DIR"
}

# Start
run_zenlog() {
  script -qec "$ZENLOG_BIN" /dev/null
}

check_result() {
    local name="$TEST_NAME"

    local fail=0
    echo "Checking tree..."
    diff --color=always -c $medir/results/$name/tree.txt <($TREE -aF "$ZENLOG_DIR")
    fail=$(( $fail || $?))

    echo "Checking log files..."
    diff --color=always  -X $medir/files/diff-ignore-files.txt \
        -ur $medir/results/$name/files "$ZENLOG_DIR"
    fail=$(( $fail || $?))


    if (( $fail )); then
        echo "Some tests failed."
    else
        echo "All tests passed."
    fi

    return $fail
}
